
class String
{
	public:
	String();
	String(const char *data);
	String(const String &other);
	~String();
	String& operator=(const String &other);
	String operator+(const String &other);
	int operator<(const String &other);
    friend ostream& operator<<(ostream&, String&);
	private:
	char *mdata;
};

String::String()
{
    mdata=new char[1];
    mdata[0]='\0';
}

String::String(const char *data)
{
	if(data==NULL)
	{
		mdata=new char[1];
		mdata[0]='\0';
	}
	else
	{
		mdata=new char[strlen(data)+1];
		strcpy(mdata, data);

	}
}

String::String(const String &other)
{
	mdata=new char[strlen(other.mdata)+1];
	strcpy(mdata, other.mdata);
}

int String::operator<(const String &other)
{
	return strcmp(mdata, other.mdata);
}

String& String::operator=(const String &other)
{
	if(this==&other)
		return *this;
	delete []mdata;
	mdata=new char[strlen(other.mdata)+1];
	strcpy(mdata, other.mdata);
	return *this;
}

String String::operator+(const String &other)
{
	String str;
	delete[] str.mdata;
	str.mdata=new char[strlen(mdata)+strlen(other.mdata)+1];
	strcpy(str.mdata, mdata);
	strcat(str.mdata, other.mdata);
	return str;
}

ostream &operator<<(ostream &output, String &str)
{
    int len=strlen(str.mdata);
    for(int i=0; i<len; i++)
        output<<str.mdata[i];
    return output;
}

String::~String()
{
	delete []mdata;
	cout<<"String Destroied"<<endl;
}

int main()
{
    String str1("Z");
    cout<<"str1= "<<str1<<endl;
    String str2=String(str1);
    cout<<"str2= "<<str2<<endl;
    String str3=str2;
    cout<<"str3= "<<str3<<endl;

    String str4("G");
    int x=str4<str1;
    cout<<x<<endl;

    String str5=str1+str4;
    cout<<str5<<endl;

	return 0;
}

