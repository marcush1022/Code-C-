/**************************************************************************************/
题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中
都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重
建二叉树并返回。
/**************************************************************************************/

class Solution {
public:
	TreeNode* reConstruct(vector<int> pre, vector<int> in, int preindex, int inindex, int len)
	{
		if(len<1)
			return NULL;
		TreeNode *root=new TreeNode(pre[preindex]);
		for(int i=0; i<len; i++)
		{
			if(in[inindex+i]==root->val)
			{
				root->left=reConstruct(pre, in, preindex+1, inindex, i);
				root->right=reConstruct(pre, in, preindex+i+1, inindex+i+1, len-i-1);
				break;
			}
		}
		return root;
	}		

    TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> in) {
		int lenP=pre.size(), lenI=in.size();
		TreeNode *root;
		if(lenP==0 || lenP!=lenI)
			return root;
		root=reConstruct(pre, in, 0, 0, lenP);
		return root;
    }
};
