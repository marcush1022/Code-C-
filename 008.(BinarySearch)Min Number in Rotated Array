/***********************************************************************************/
Get the min number of a rotated array.
The array may contain duplicates. 
Example: Input: 3,4,5,1,2
Output: 1.
/***********************************************************************************/

class Solution
{
    public:
	int getMin(vector<int> &nums)
	{
		int len=nums.size();
		if(len==0)
			return -1;
		int left=0, right=len-1;
		int mid;

        while(nums[right]==nums[right-1] && left<right)
                right--;
        while(nums[left]==nums[left+1] && left<right)
                left++;

        cout<<"left= "<<left<<", right= "<<right<<endl;
        if(left==right)
            return nums[right];


		while((right-left)!=1)
		{
			mid=(left+right)/2;
			if(nums[mid]>=nums[left])
				left=mid;
			else if(nums[mid]<=nums[right])
				right=mid;
		}

		return nums[right];
	}
};

int main()
{
	vector<int> nums;
	nums.push_back(3);
	nums.push_back(4);
	nums.push_back(5);
	nums.push_back(6);
    nums.push_back(1);
	nums.push_back(2);
	Solution s;
	cout<<s.getMin(nums);
}
