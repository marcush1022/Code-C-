/*****************************************************************************/
Input a array of prices of hats, and the number of hats N, get the third cheapest
hat.
Example: 10, 10 10 10 20 20 30 35 40 50 50.
Output: 30
/*****************************************************************************/

class Solution
{
	public:
		void removeDuplicates(vector<int> &nums)
		{
			int k=1;
			for(int i=1; i<nums.size(); i++)
			{
				if(nums[i]!=nums[i-1])
					nums[k++]=nums[i];
			}
		}

		int doPartition(vector<int> &nums, int left, int right)
		{
			int val=nums[right];
			for(int i=left; i<right; i++)
			{
				if(nums[i]<val)
				{
					swap(nums[left++], nums[i]);
				}
			}
			swap(nums[left], nums[right]);
			return left;
		}

		int getLeastPrice(vector<int> &prices, int k)
		{
			int left=0, right=prices.size()-1;
			int len=prices.size();
			int ans;
			int pos=len-k;
			if(!pos)
                return -1;
			while((ans=doPartition(prices, left, right))!=pos)
			{
				if(ans>pos)
					right=ans-1;
				else
					left=ans+1;
			}

			cout<<"Res: "<<endl;
			for(int i=0; i<len; i++)
				cout<<prices[i]<<",";
			cout<<endl;
			removeDuplicates(prices);
			return prices[k-1];
		}

		int getThirdHat(int hatNum)
		{
			int res;

			if(hatNum>50 || hatNum<=0)
				return -1;
			cout<<"Input prices of hats: "<<endl;
			int i=0;
			int price=0;
			vector<int> prices;
			while(i<hatNum)
			{
				cin>>price;
				if(price<=0 || price>50)
					return -1;
				prices.push_back(price);
				i++;
			}
			res=getLeastPrice(prices, 3);
			return res;
		}

};

int main()
{
    Solution s;
    int hatNum, res;
	cout<<"Input hatNum: "<<endl;
	cin>>hatNum;
	res=s.getThirdHat(hatNum);
	if(res<0)
		cout<<"ERROR hat number or prices!"<<endl;
	else
		cout<<"Hat= "<<res<<endl;
}



