/************************************************************************************************/
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。
由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。
/************************************************************************************************/

class Solution {
public:
    int doPartition(vector<int> nums, int left, int right){
        int val=nums[right];
        for(int i=left; i<right; i++){
            if(nums[i]<val)
                swap(nums[i], nums[left++]);
        }
        swap(nums[left], nums[right]);
        return left;
    }
    
    bool isMoreThanHalf(vector<int> nums, int x){   //注意判断
        int count=0;
        int len=nums.size();
        for(int i=0; i<nums.size(); i++){
            if(nums[i]==x)
                count++;
        }
        return count*2>len;
    }
    
    int MoreThanHalfNum_Solution(vector<int> nums) {
    	int pos=nums.size()/2;
        int left=0, right=nums.size()-1;
        int ans;
        while((ans=doPartition(nums, left, right))!=pos){
            if(ans>pos)
                right=ans-1;
            else
                left=ans+1;
        }
        if(isMoreThanHalf(nums, nums[pos]))
        	return nums[pos];
        else
            return 0;
    }
};
