/************************************************************************************/
Given a list of number, return the second number that appears second most frequently.
Example: Input: {0,1,2,2,2,2,1,0,5,1}
Return: 1
/************************************************************************************/

int findSecondMost(vector<int> &nums)
{
    if(nums.size()==0)
        return -1;
	int len=nums.size();
	map<int, int> m;
	vector<int>::iterator it;
	vector<int>::iterator itmax;
	int maxCount=0;
    int secondMax;

	for(int i=0; i<len; i++)
	{
		if(m.end()!=m.find(nums[i]))
			m[nums[i]]++;
		else
			m.insert(pair<int, int>(nums[i], 1));
	}

	for(it=nums.begin();it!=nums.end();it++)
    {
        if(m[*it]>maxCount)
            maxCount=m[*it];
    }
    cout<<"First most Count="<<maxCount<<endl;

    for(it=nums.begin();it!=nums.end();)
    {
        if(m[*it] ==maxCount)
        {
            it=nums.erase(it);
            len--;
        }
         else
             ++it;
     }
     cout<<"First most Deleted"<<endl;
    for(int i=0; i<len; i++)
	{
        cout<<nums[i]<<",";
	}
    cout<<endl;
    maxCount=0;
    for(it=nums.begin();it!=nums.end();it++)
    {
        if(m[*it]>maxCount)
            maxCount=m[*it];
    }
    for(it=nums.begin();it!=nums.end();it++)
    {
        if(m[*it] ==maxCount)
           secondMax=(int)*it;
     }
     return secondMax;
}

int main()
{
    vector<int> nums;
    nums.push_back(0);
    nums.push_back(1);
    nums.push_back(2);
    nums.push_back(2);
    nums.push_back(2);
    nums.push_back(2);
    nums.push_back(1);
    nums.push_back(0);
    nums.push_back(5);
    nums.push_back(1);
    cout<<findSecondMost(nums);
}
