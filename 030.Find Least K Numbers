/**************************************************************************************************************/
iutput an array of intigers, find the least k numbers, 
example: input {4,5,1,6,2,7,3,8}, 4
output: 1,2,3,4
/**************************************************************************************************************/

class Solution
{
	public:
		int doPartition(vector<int> &nums, int left, int right)
		{
			int val=nums[right];
			for(int i=left; i<right; i++)
			{
				if(nums[i]<val)
				{
					swap(nums[left++], nums[i]);
				}
			}
			swap(nums[left], nums[right]);
			return left;
		}

		void getLeastNumbers(vector<int> &nums, int k)
		{
			int left=0, right=nums.size()-1;
			int len=nums.size();
			int ans;
			int pos=len-k;
			while((ans=doPartition(nums, left, right))!=pos)
			{
				if(ans>pos)
					right=ans-1;
				else
					left=ans+1;
			}
            		cout<<"AFTER: "<<endl;
            		for(int i=0;i<nums.size();i++)
                		cout<<nums[i]<<",";
            		cout<<endl;
            		cout<<"KKKKKK: "<<endl;
			for(int i=0;i<k;i++)
				cout<<nums[i]<<",";
            		cout<<endl;
		}


};

int main()
{
    Solution s;
    vector<int> nums;
    //vector<int> output;
    nums.push_back(4);
    nums.push_back(5);
    nums.push_back(1);
    nums.push_back(6);
    nums.push_back(2);
    nums.push_back(7);
    nums.push_back(3);
    nums.push_back(8);
    cout<<"size= "<<nums.size()<<endl;
    cout<<"BEFORE: "<<endl;
    for(int i=0;i<nums.size();i++)
        cout<<nums[i]<<",";
    cout<<endl;
    s.getLeastNumbers(nums, 4);



}
